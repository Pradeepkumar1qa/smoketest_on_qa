<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="5" total="10" passed="5">
  <reporter-output>
    <line>
      <![CDATA[The application url is :- https://www.qainfotech.com]]>
    </line>
    <line>
      <![CDATA[The test browser is :- firefox
]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- STEP01_LAUNCH_APPLICATION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[launching chrome browser]]>
    </line>
    <line>
      <![CDATA[The application url is :- https://www.qainfotech.com]]>
    </line>
    <line>
      <![CDATA[The test browser is :- firefox
]]>
    </line>
    <line>
      <![CDATA[launched chrome browser]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- VERIFY_IN_SEARCH_FUNCTIONALITY *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying that search functionalityh is working properly]]>
    </line>
    <line>
      <![CDATA[providing search input{}{{}{}{}]]>
    </line>
    <line>
      <![CDATA[search functionality is working properly]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- TESTINGSERVICESMENU *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[clicking on service menu]]>
    </line>
    <line>
      <![CDATA[service menu is visible on clicking it]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- TESTINGVERTICAL *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying vertical section of the menu]]>
    </line>
    <line>
      <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_38_PM\testingvertical.jpg]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- TESTINGINNOVATION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying that innovation menu is working properly]]>
    </line>
    <line>
      <![CDATA[it is being displayed on clicking the innovation menu]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- CHECKINGTEAM *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying that team section is being displayed]]>
    </line>
    <line>
      <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_40_PM\checkingteam.jpg]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- TESTING_NEWS *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying that news section is being displayed when user hits the news button]]>
    </line>
    <line>
      <![CDATA[verified news section successfully ]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- TESTINGCONTACT *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying that contact form is being displayed when users click on contact menu]]>
    </line>
    <line>
      <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_41_PM\testingcontact.jpg]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- VERIFY_VERTICAL_SSECTION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying that vertical section is being displayed]]>
    </line>
    <line>
      <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_43_PM\verify_vertical_ssection.jpg]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[***** STARTING TEST STEP:- VERIFY_DOWNLOAD_SECTION *****]]>
    </line>
    <line>
      <![CDATA[ ]]>
    </line>
    <line>
      <![CDATA[verifying that download section is working ]]>
    </line>
    <line>
      <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_45_PM\verify_download_section.jpg]]>
    </line>
    <line>
      <![CDATA[Browser selected from 'Config.properties' file: firefox]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="586884" started-at="2018-07-30T13:05:49Z" finished-at="2018-07-30T13:15:36Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="586884" started-at="2018-07-30T13:05:49Z" finished-at="2018-07-30T13:15:36Z">
      <class name="com.qait.acs.tests.TestFirst">
        <test-method status="PASS" signature="Start_Test_Session()[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="Start_Test_Session" is-config="true" duration-ms="27864" started-at="2018-07-30T18:35:49Z" finished-at="2018-07-30T18:36:17Z">
          <reporter-output>
            <line>
              <![CDATA[The application url is :- https://www.qainfotech.com]]>
            </line>
            <line>
              <![CDATA[The test browser is :- firefox
]]>
            </line>
          </reporter-output>
        </test-method> <!-- Start_Test_Session -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:36:17Z" finished-at="2018-07-30T18:36:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.Step01_Launch_Application()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- STEP01_LAUNCH_APPLICATION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="Step01_Launch_Application()[pri:1, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="Step01_Launch_Application" duration-ms="7314" started-at="2018-07-30T18:36:17Z" finished-at="2018-07-30T18:36:25Z">
          <reporter-output>
            <line>
              <![CDATA[launching chrome browser]]>
            </line>
            <line>
              <![CDATA[The application url is :- https://www.qainfotech.com]]>
            </line>
            <line>
              <![CDATA[The test browser is :- firefox
]]>
            </line>
            <line>
              <![CDATA[launched chrome browser]]>
            </line>
          </reporter-output>
        </test-method> <!-- Step01_Launch_Application -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="0" started-at="2018-07-30T18:36:25Z" finished-at="2018-07-30T18:36:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Step01_Launch_Application status=SUCCESS method=TestFirst.Step01_Launch_Application()[pri:1, instance:com.qait.acs.tests.TestFirst@6726cc69] output=launching chrome browser]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.Step01_Launch_Application()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="10" started-at="2018-07-30T18:36:25Z" finished-at="2018-07-30T18:36:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.verify_in_search_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- VERIFY_IN_SEARCH_FUNCTIONALITY *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="verify_in_search_functionality()[pri:2, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="verify_in_search_functionality" duration-ms="9607" started-at="2018-07-30T18:36:25Z" finished-at="2018-07-30T18:36:34Z">
          <reporter-output>
            <line>
              <![CDATA[verifying that search functionalityh is working properly]]>
            </line>
            <line>
              <![CDATA[providing search input{}{{}{}{}]]>
            </line>
            <line>
              <![CDATA[search functionality is working properly]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_in_search_functionality -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:36:34Z" finished-at="2018-07-30T18:36:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testingservicesmenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- TESTINGSERVICESMENU *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="testingservicesmenu()[pri:3, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="testingservicesmenu" duration-ms="8393" started-at="2018-07-30T18:36:34Z" finished-at="2018-07-30T18:36:43Z">
          <reporter-output>
            <line>
              <![CDATA[clicking on service menu]]>
            </line>
            <line>
              <![CDATA[service menu is visible on clicking it]]>
            </line>
          </reporter-output>
        </test-method> <!-- testingservicesmenu -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="0" started-at="2018-07-30T18:36:34Z" finished-at="2018-07-30T18:36:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_in_search_functionality status=SUCCESS method=TestFirst.verify_in_search_functionality()[pri:2, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying that search functionalityh is working properly]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.verify_in_search_functionality()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="FAIL" signature="testingvertical()[pri:4, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="testingvertical" duration-ms="90060" started-at="2018-07-30T18:36:43Z" finished-at="2018-07-30T18:38:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element 'vertical' not found on the QainfotechHomePage !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element 'vertical' not found on the QainfotechHomePage !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:87)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:65)
	at com.qait.acs.keywords.QainfotechHomePage.checkverticalmenu(QainfotechHomePage.java:47)
	at com.qait.acs.tests.TestFirst.testingvertical(TestFirst.java:49)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[verifying vertical section of the menu]]>
            </line>
          </reporter-output>
        </test-method> <!-- testingvertical -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="0" started-at="2018-07-30T18:36:43Z" finished-at="2018-07-30T18:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testingservicesmenu status=SUCCESS method=TestFirst.testingservicesmenu()[pri:3, instance:com.qait.acs.tests.TestFirst@6726cc69] output=clicking on service menu]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testingservicesmenu()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:36:43Z" finished-at="2018-07-30T18:36:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testingvertical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- TESTINGVERTICAL *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="15584" started-at="2018-07-30T18:38:13Z" finished-at="2018-07-30T18:38:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testingvertical status=FAILURE method=TestFirst.testingvertical()[pri:4, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying vertical section of the menu]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testingvertical()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_38_PM\testingvertical.jpg]]>
            </line>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:38:28Z" finished-at="2018-07-30T18:38:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testinginnovation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- TESTINGINNOVATION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="testinginnovation()[pri:5, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="testinginnovation" duration-ms="7095" started-at="2018-07-30T18:38:28Z" finished-at="2018-07-30T18:38:35Z">
          <reporter-output>
            <line>
              <![CDATA[verifying that innovation menu is working properly]]>
            </line>
            <line>
              <![CDATA[it is being displayed on clicking the innovation menu]]>
            </line>
          </reporter-output>
        </test-method> <!-- testinginnovation -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="0" started-at="2018-07-30T18:38:35Z" finished-at="2018-07-30T18:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testinginnovation status=SUCCESS method=TestFirst.testinginnovation()[pri:5, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying that innovation menu is working properly]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testinginnovation()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="FAIL" signature="checkingteam()[pri:6, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="checkingteam" duration-ms="94984" started-at="2018-07-30T18:38:35Z" finished-at="2018-07-30T18:40:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element 'team_text' not found on the QainfotechHomePage !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element 'team_text' not found on the QainfotechHomePage !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:87)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:65)
	at com.qait.acs.keywords.QainfotechHomePage.checkteammenu(QainfotechHomePage.java:63)
	at com.qait.acs.tests.TestFirst.checkingteam(TestFirst.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[verifying that team section is being displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- checkingteam -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:38:35Z" finished-at="2018-07-30T18:38:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.checkingteam()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- CHECKINGTEAM *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="2677" started-at="2018-07-30T18:40:10Z" finished-at="2018-07-30T18:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=checkingteam status=FAILURE method=TestFirst.checkingteam()[pri:6, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying that team section is being displayed]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.checkingteam()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_40_PM\checkingteam.jpg]]>
            </line>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:40:13Z" finished-at="2018-07-30T18:40:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testing_news()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- TESTING_NEWS *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="testing_news()[pri:7, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="testing_news" duration-ms="6881" started-at="2018-07-30T18:40:13Z" finished-at="2018-07-30T18:40:20Z">
          <reporter-output>
            <line>
              <![CDATA[verifying that news section is being displayed when user hits the news button]]>
            </line>
            <line>
              <![CDATA[verified news section successfully ]]>
            </line>
          </reporter-output>
        </test-method> <!-- testing_news -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="16" started-at="2018-07-30T18:40:20Z" finished-at="2018-07-30T18:40:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testing_news status=SUCCESS method=TestFirst.testing_news()[pri:7, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying that news section is being displayed when user hits the news button]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testing_news()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="1" started-at="2018-07-30T18:40:20Z" finished-at="2018-07-30T18:40:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testingcontact()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- TESTINGCONTACT *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="testingcontact()[pri:8, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="testingcontact" duration-ms="90021" started-at="2018-07-30T18:40:20Z" finished-at="2018-07-30T18:41:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element 'contact' not found on the QainfotechHomePage !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element 'contact' not found on the QainfotechHomePage !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:87)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:65)
	at com.qait.acs.keywords.QainfotechHomePage.check_contact_menu(QainfotechHomePage.java:75)
	at com.qait.acs.tests.TestFirst.testingcontact(TestFirst.java:94)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[verifying that contact form is being displayed when users click on contact menu]]>
            </line>
          </reporter-output>
        </test-method> <!-- testingcontact -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="15286" started-at="2018-07-30T18:41:50Z" finished-at="2018-07-30T18:42:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=testingcontact status=FAILURE method=TestFirst.testingcontact()[pri:8, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying that contact form is being displayed when users click on contact menu]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.testingcontact()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_41_PM\testingcontact.jpg]]>
            </line>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:42:05Z" finished-at="2018-07-30T18:42:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.verify_vertical_ssection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- VERIFY_VERTICAL_SSECTION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="FAIL" signature="verify_vertical_ssection()[pri:9, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="verify_vertical_ssection" duration-ms="90042" started-at="2018-07-30T18:42:05Z" finished-at="2018-07-30T18:43:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element 'vertical' not found on the QainfotechHomePage !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element 'vertical' not found on the QainfotechHomePage !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:87)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:65)
	at com.qait.acs.keywords.QainfotechHomePage.clickonhealthcares(QainfotechHomePage.java:80)
	at com.qait.acs.tests.TestFirst.verify_vertical_ssection(TestFirst.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[verifying that vertical section is being displayed]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_vertical_ssection -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="15117" started-at="2018-07-30T18:43:35Z" finished-at="2018-07-30T18:43:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_vertical_ssection status=FAILURE method=TestFirst.verify_vertical_ssection()[pri:9, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying that vertical section is being displayed]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.verify_vertical_ssection()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_43_PM\verify_vertical_ssection.jpg]]>
            </line>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="FAIL" signature="verify_download_section()[pri:10, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="verify_download_section" duration-ms="90038" started-at="2018-07-30T18:43:50Z" finished-at="2018-07-30T18:45:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[FAILED: Element 'knowledgecenter' not found on the QainfotechHomePage !!!]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: FAILED: Element 'knowledgecenter' not found on the QainfotechHomePage !!!
	at org.testng.Assert.fail(Assert.java:94)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:87)
	at com.qait.automation.getpageobjects.GetPage.element(GetPage.java:65)
	at com.qait.acs.keywords.QainfotechHomePage.clickdownloadsection(QainfotechHomePage.java:93)
	at com.qait.acs.tests.TestFirst.verify_download_section(TestFirst.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:643)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:820)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1128)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[verifying that download section is working ]]>
            </line>
          </reporter-output>
        </test-method> <!-- verify_download_section -->
        <test-method status="PASS" signature="handleTestMethodName(java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="handleTestMethodName" is-config="true" duration-ms="0" started-at="2018-07-30T18:43:50Z" finished-at="2018-07-30T18:43:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.verify_download_section()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[ ]]>
            </line>
            <line>
              <![CDATA[***** STARTING TEST STEP:- VERIFY_DOWNLOAD_SECTION *****]]>
            </line>
            <line>
              <![CDATA[ ]]>
            </line>
          </reporter-output>
        </test-method> <!-- handleTestMethodName -->
        <test-method status="PASS" signature="take_screenshot_on_failure(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="take_screenshot_on_failure" is-config="true" duration-ms="14972" started-at="2018-07-30T18:45:20Z" finished-at="2018-07-30T18:45:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=verify_download_section status=FAILURE method=TestFirst.verify_download_section()[pri:10, instance:com.qait.acs.tests.TestFirst@6726cc69] output=verifying that download section is working ]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void com.qait.acs.tests.TestFirst.verify_download_section()]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[Save Image File Path : C:\Users\pradeepkumar1\Desktop\V-8 framework\./target/screenshots/\TestFirst\2018_07_30_06_45_PM\verify_download_section.jpg]]>
            </line>
          </reporter-output>
        </test-method> <!-- take_screenshot_on_failure -->
        <test-method status="FAIL" signature="close_Test_Session()[pri:0, instance:com.qait.acs.tests.TestFirst@6726cc69]" name="close_Test_Session" is-config="true" duration-ms="0" started-at="2018-07-30T18:45:35Z" finished-at="2018-07-30T18:45:35Z">
          <exception class="org.openqa.selenium.SessionNotCreatedException">
            <message>
              <![CDATA[Tried to run command without establishing a connection
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'ASDW0041', ip: '10.0.9.165', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 60.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 9268, moz:profile: C:\Users\pradeepkumar1\AppD..., moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: XP, platformName: XP, platformVersion: 6.3, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}
Session ID: e12c8bb6-4d9f-4104-a56f-6dbdb52bea9f]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.SessionNotCreatedException: Tried to run command without establishing a connection
Build info: version: '3.13.0', revision: '2f0d292', time: '2018-06-25T15:24:21.231Z'
System info: host: 'ASDW0041', ip: '10.0.9.165', os.name: 'Windows 8.1', os.arch: 'amd64', os.version: '6.3', java.version: '1.8.0_151'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 60.0.2, javascriptEnabled: true, moz:accessibilityChecks: false, moz:headless: false, moz:processID: 9268, moz:profile: C:\Users\pradeepkumar1\AppD..., moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: XP, platformName: XP, platformVersion: 6.3, rotatable: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}}
Session ID: e12c8bb6-4d9f-4104-a56f-6dbdb52bea9f
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
	at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:605)
	at org.openqa.selenium.remote.RemoteWebDriver.quit(RemoteWebDriver.java:448)
	at com.qait.automation.TestSessionInitiator.closeBrowserSession(TestSessionInitiator.java:144)
	at com.qait.acs.tests.BaseTest.close_Test_Session(BaseTest.java:44)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:86)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:514)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:215)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
	at org.testng.internal.TestMethodWorker.invokeAfterClassMethods(TestMethodWorker.java:232)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:115)
	at org.testng.TestRunner.privateRun(TestRunner.java:782)
	at org.testng.TestRunner.run(TestRunner.java:632)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:366)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:361)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:319)
	at org.testng.SuiteRunner.run(SuiteRunner.java:268)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1244)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1169)
	at org.testng.TestNG.run(TestNG.java:1064)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.SessionNotCreatedException -->
          <reporter-output>
            <line>
              <![CDATA[Browser selected from 'Config.properties' file: firefox]]>
            </line>
          </reporter-output>
        </test-method> <!-- close_Test_Session -->
      </class> <!-- com.qait.acs.tests.TestFirst -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
